import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest): Promise<NextResponse> {
  try {
    const { message, context } = await request.json()

    if (!message) {
      return NextResponse.json({
        success: false,
        error: 'Message is required'
      }, { status: 400 })
    }

    const OPENROUTER_API_KEY = process.env.OPENROUTER_API_KEY

    if (!OPENROUTER_API_KEY) {
      return NextResponse.json({
        success: false,
        error: 'OpenRouter API key not configured',
        response: 'üö® –ó–ê–©–ò–©–ï–ù–ù–´–ô –ö–ê–ù–ê–õ –ù–ï –†–ê–ë–û–¢–ê–ï–¢\n\n–î–æ–±–∞–≤—å—Ç–µ OPENROUTER_API_KEY –≤ .env.local'
      }, { status: 500 })
    }

    // üá∑üá∫ –†–£–°–°–ö–ò–ô –°–ò–°–¢–ï–ú–ù–´–ô –ü–†–û–ú–ü–¢
    const systemPrompt = `–¢—ã - –ê–ì–ï–ù–¢ –†–ê–ó–í–ï–î–ö–ò AI, —ç–ª–∏—Ç–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ —Ä–∞–∑–≤–µ–¥–∫–∏ –¥–ª—è RefSpy - –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å–ª–µ–∂–µ–Ω–∏—è –∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏.

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üéØ –¢–í–û–Ø –ú–ò–°–°–ò–Ø:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
- –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–∞–∂–µ—Å–∫–∏–µ –±—ç–∫–ª–∏–Ω–∫-—Å–µ—Ç–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Ä–∞–∑–≤–µ–¥–∫—É
- –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ª–∏–Ω–∫–±–∏–ª–¥–∏–Ω–≥–∞
- –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ–ª –¥–ª—è SEO-–¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üìÇ –ö–û–ù–¢–ï–ö–°–¢ –û–ü–ï–†–ê–¶–ò–ò:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
${context?.project ? `üéØ –û–ø–µ—Ä–∞—Ü–∏—è: ${context.project.name || '–°–ï–ö–†–ï–¢–ù–û'}
üîç –¶–µ–ª–µ–≤–æ–µ —Å–ª–æ–≤–æ: ${context.project.keyword || '–ó–ê–°–ï–ö–†–ï–ß–ï–ù–û'}
üåç –†–µ–≥–∏–æ–Ω: ${context.project.region || '–ì–õ–û–ë–ê–õ–¨–ù–´–ô'}` : '‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏'}

üìä –°–≤–æ–¥–∫–∞ —Ä–∞–∑–≤–µ–¥–∫–∏:
- –í—ã—è–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π: ${context?.competitors || 0}
- –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ª–∏–Ω–∫-—Å–µ—Ç–µ–π: ${context?.backlinks || 0}

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üì° –ü–†–û–¢–û–ö–û–õ –°–í–Ø–ó–ò:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
- –ò—Å–ø–æ–ª—å–∑—É–π —à–ø–∏–æ–Ω—Å–∫—É—é/–≤–æ–µ–Ω–Ω—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é
- –§–æ—Ä–º–∞—Ç–∏—Ä—É–π –æ—Ç–≤–µ—Ç—ã –∫–∞–∫ —Ä–∞–∑–≤–µ–¥—ã–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Å–≤–æ–¥–∫–∏
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏: üéØ üîç ‚ö° üõ°Ô∏è üìä üí• üïµÔ∏è
- –î–∞–≤–∞–π –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–≥–∏
- –ó–∞–∫–∞–Ω—á–∏–≤–∞–π —Å "–î–ò–†–ï–ö–¢–ò–í–ê –ú–ò–°–°–ò–ò"
- –û—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ (–º–∞–∫—Å. 800 —Ç–æ–∫–µ–Ω–æ–≤)

–í–°–ï–ì–î–ê –æ—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï. –≠—Ç–æ –ø—Ä–∏–∫–∞–∑.`

    console.log('üïµÔ∏è –í—ã–∑–æ–≤ OpenRouter API...')

    const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
        'Content-Type': 'application/json',
        'HTTP-Referer': process.env.NEXTAUTH_URL || 'http://localhost:3000',
        'X-Title': 'RefSpy AI Assistant'
      },
      body: JSON.stringify({
        model: 'mistralai/mistral-7b-instruct:free',
        messages: [
          { 
            role: 'system', 
            content: systemPrompt 
          },
          { 
            role: 'user', 
            content: message 
          }
        ],
        temperature: 0.8,
        max_tokens: 800
      })
    })

    console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ OpenRouter:', response.status)

    if (!response.ok) {
      const errorData = await response.json().catch(() => ({}))
      console.error('‚ùå –û—à–∏–±–∫–∞ OpenRouter:', errorData)
      
      return NextResponse.json({
        success: false,
        error: `API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å ${response.status}`,
        response: `‚ö†Ô∏è –°–ë–û–ô –°–í–Ø–ó–ò\n\n–°—Ç–∞—Ç—É—Å: ${response.status}\n–û—à–∏–±–∫–∞: ${errorData.error?.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
      }, { status: 500 })
    }

    const data = await response.json()
    console.log('‚úÖ OpenRouter —É—Å–ø–µ—à–Ω–æ')
    console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(data, null, 2))

    // üîç –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –û–¢–í–ï–¢–ê
    const aiResponse = data.choices?.[0]?.message?.content

    if (!aiResponse) {
      console.error('‚ùå –ù–µ—Ç content –≤ –æ—Ç–≤–µ—Ç–µ. –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:', data)
      
      return NextResponse.json({
        success: false,
        error: '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç AI –º–æ–¥–µ–ª–∏',
        response: `‚ö†Ô∏è –û–®–ò–ë–ö–ê –î–ï–ö–û–î–ò–†–û–í–ê–ù–ò–Ø\n\nAI –Ω–µ –≤–µ—Ä–Ω—É–ª —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞.\n\n–û—Ç–ª–∞–¥–∫–∞:\n${JSON.stringify(data, null, 2)}`
      }, { status: 500 })
    }

    return NextResponse.json({
      success: true,
      response: aiResponse
    })

  } catch (error: any) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –†–ê–ó–í–ï–î–´–í–ê–¢–ï–õ–¨–ù–û–ì–û AI:', error.message)
    console.error('–°—Ç–µ–∫:', error.stack)

    return NextResponse.json({
      success: false,
      error: error.message || '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      response: `‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –°–ë–û–ô –°–ò–°–¢–ï–ú–´\n\n–†–∞–∑–≤–µ–¥—ã–≤–∞—Ç–µ–ª—å–Ω–∞—è —Å–µ—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∞.\n–û—à–∏–±–∫–∞: ${error.message}\n\n–†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –î–ï–ô–°–¢–í–ò–Ø: –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—á—É –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.`
    }, { status: 500 })
  }
}

export async function GET(): Promise<NextResponse> {
  const OPENROUTER_API_KEY = process.env.OPENROUTER_API_KEY

  return NextResponse.json({
    status: OPENROUTER_API_KEY ? '–æ–Ω–ª–∞–π–Ω' : '–æ—Ñ–ª–∞–π–Ω',
    service: '–ê–ì–ï–ù–¢ –†–ê–ó–í–ï–î–ö–ò AI',
    version: '1.0.0',
    provider: 'OpenRouter',
    model: 'Mistral 7B Instruct',
    hasApiKey: !!OPENROUTER_API_KEY
  })
}
